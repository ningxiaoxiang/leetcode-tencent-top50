class Solution {
public:
    int maxProfit(vector<int>& prices) {
      
        int ans=0;
        
        for(int i=1;i<prices.size();i++)
        {
          if( prices[i-1]<prices[i])
            
           ans+= prices[i]-prices[i-1];
            
        }
        return ans;  
    }
};



官方解答上还有个峰谷法，复制如下：

class Solution {
    public int maxProfit(int[] prices) {
        int i = 0;
        int valley = prices[0];
        int peak = prices[0];
        int maxprofit = 0;
        while (i < prices.length - 1) {
            while (i < prices.length - 1 && prices[i] >= prices[i + 1])
                i++;
            valley = prices[i];
            while (i < prices.length - 1 && prices[i] <= prices[i + 1])
                i++;
            peak = prices[i];
            maxprofit += peak - valley;
        }
        return maxprofit;
    }
} 


问题：无
